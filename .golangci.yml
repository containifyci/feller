version: "2"
run:
  allow-parallel-runners: true
output:
  formats:
    text:
      path: stdout
    checkstyle:
      path: report.xml
  sort-order:
    - linter
    - severity
    - file
linters:
  default: none
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - contextcheck
    - copyloopvar
    - durationcheck
    - errcheck
    - errchkjson
    - errname
    - errorlint
    - exhaustive
    - fatcontext
    - funlen
    - gocheckcompilerdirectives
    - gochecksumtype
    - goconst
    - gocritic
    - gomoddirectives
    - gomodguard
    - gosec
    - gosmopolitan
    - govet
    - ineffassign
    - loggercheck
    - makezero
    - misspell
    - musttag
    - nakedret
    - nestif
    - nilerr
    - nilnesserr
    - nilnil
    - noctx
    - nolintlint
    - paralleltest
    - perfsprint
    - prealloc
    - predeclared
    - promlinter
    - protogetter
    - reassign
    - recvcheck
    - revive
    - rowserrcheck
    - spancheck
    - sqlclosecheck
    - staticcheck
    - tagliatelle
    - testableexamples
    - testifylint
    - thelper
    - tparallel
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - usetesting
    - wastedassign
    - wrapcheck
    - zerologlint
  settings:
    gocritic:
      disabled-checks:
        - hugeParam
        - rangeExprCopy
        - rangeValCopy
        - whyNoLint
      enabled-tags:
        - diagnostic
        - experimental
        - opinionated
        - performance
        - style
    govet:
      enable-all: true
      settings:
        printf:
          funcs:
            - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
            - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
            - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
            - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
    errcheck:
      check-type-assertions: true
      exclude-functions:
        - io/ioutil.ReadFile
        - io.Copy(*bytes.Buffer)
        - io.Copy(os.Stdout)
    funlen:
      lines: 100
      statements: 50
      ignore-comments: false
    nestif:
      min-complexity: 5
    tagliatelle:
      case:
        rules:
          avro: snake
          bson: camel
          json: snake
          mapstructure: kebab
          xml: camel
          yaml: snake
  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    rules:
      - linters:
          - errcheck
          - funlen
          - gosec
          - wrapcheck
        path: _test.go
    paths:
      - .git
      - .github
      - vendor
      - third_party$
      - builtin$
      - examples$
formatters:
  enable:
    - gofmt
    - gofumpt
    - goimports
  settings:
    gofmt:
      simplify: true
  exclusions:
    generated: lax
    paths:
      - .git
      - .github
      - vendor
      - third_party$
      - builtin$
      - examples$
