name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum

      - name: Clean Go module cache
        run: go clean -modcache

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: go test -v ./...

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  test-release:
    name: Test GitHub Action After Release
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Test action installation
        uses: ./.github/actions/setup-feller
        with:
          version: 'latest'

      - name: Create test config
        run: |
          cat > .teller.yml << 'EOF'
          providers:
            test_env:
              kind: dotenv
              maps:
                - id: test_vars
                  path: .env.test
                  keys:
                    TEST_VAR: TEST_OUTPUT
          EOF
          echo "TEST_VAR=release_test" > .env.test

      - name: Test action with command
        uses: ./.github/actions/setup-feller
        with:
          command: 'env'
