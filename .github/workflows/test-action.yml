name: Test GitHub Action

on:
  push:
    branches: [main]
    paths:
      - '.github/actions/setup-feller/**'
      - '.github/workflows/test-action.yml'
  pull_request:
    branches: [main]
    paths:
      - '.github/actions/setup-feller/**'
      - '.github/workflows/test-action.yml'
  workflow_dispatch:

jobs:
  test-matrix:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Test - Install Latest Version
        id: install-latest
        uses: ./.github/actions/setup-feller

      - name: Verify installation
        shell: bash
        run: |
          # Check if teller is in PATH (cross-platform) - default behavior now stores as teller
          command -v teller

          # Check if teller runs
          teller --help

          # Verify outputs
          echo "Installed version: ${{ steps.install-latest.outputs.version-installed }}"
          echo "Binary path: ${{ steps.install-latest.outputs.feller-path }}"

      - name: Test - Install Specific Version
        uses: ./.github/actions/setup-feller
        with:
          version: 'v0.0.1'

      - name: Create test teller config
        shell: bash
        run: |
          cat > .teller.yml << 'EOF'
          providers:
            test_env:
              kind: dotenv
              maps:
                - id: test_vars
                  path: .env.test
                  keys:
                    TEST_VAR: TEST_OUTPUT
          EOF

          echo "TEST_VAR=hello_world" > .env.test

      - name: Test - Run feller env command
        uses: ./.github/actions/setup-feller
        with:
          command: 'env'

      - name: Test - Run feller export command
        uses: ./.github/actions/setup-feller
        with:
          command: 'export'
          args: 'json'

      - name: Test - Multi-step usage
        shell: bash
        run: |
          # Teller should still be available from previous steps
          teller --help
          teller env

  test-caching:
    name: Test Binary Caching
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: First installation (cache miss)
        uses: ./.github/actions/setup-feller
        with:
          version: 'v0.0.1'

      - name: Second installation (cache hit)
        uses: ./.github/actions/setup-feller
        with:
          version: 'v0.0.1'

      - name: Verify teller still works after caching
        run: teller --help

  test-error-handling:
    name: Test Error Handling
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Test invalid version (should fail)
        continue-on-error: true
        id: invalid-version
        uses: ./.github/actions/setup-feller
        with:
          version: 'v999.999.999'

      - name: Verify invalid version failed
        if: steps.invalid-version.outcome == 'success'
        run: |
          echo "::error::Expected invalid version to fail, but it succeeded"
          exit 1

  test-working-directory:
    name: Test Working Directory
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Create test directory and config
        run: |
          mkdir -p test-dir
          cat > test-dir/.teller.yml << 'EOF'
          providers:
            test_env:
              kind: dotenv
              maps:
                - id: test_vars
                  path: .env.test
                  keys:
                    TEST_VAR: TEST_OUTPUT
          EOF
          echo "TEST_VAR=from_subdir" > test-dir/.env.test

      - name: Test working directory
        uses: ./.github/actions/setup-feller
        with:
          command: 'env'
          working-directory: './test-dir'

  test-github-secrets:
    name: Test with GitHub Secrets
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Create GitHub Actions config
        run: |
          cat > .teller.yml << 'EOF'
          providers:
            github_secrets:
              kind: google_secretmanager
              maps:
                - id: test_secrets
                  keys:
                    TEST_SECRET: TEST_SECRET
                    ANOTHER_SECRET: ANOTHER_SECRET
          EOF

      - name: Test with environment variables
        uses: ./.github/actions/setup-feller
        with:
          command: 'env'
        env:
          TEST_SECRET: mock-secret-token-12345  # Dedicated test value
          ANOTHER_SECRET: test_value

  integration-test:
    name: Integration Test - Complete Workflow
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup test environment
        run: |
          # Create a complete test scenario
          cat > .teller.yml << 'EOF'
          providers:
            local_env:
              kind: dotenv
              maps:
                - id: app_config
                  path: .env.production
                  keys:
                    DATABASE_URL: DB_URL
                    API_KEY: API_KEY
                    DEBUG_MODE: DEBUG
          EOF

          echo "DATABASE_URL=postgresql://user:pass@localhost/db" \
            > .env.production
          echo "API_KEY=secret-api-key-12345" >> .env.production
          echo "DEBUG_MODE=false" >> .env.production

          # Create a test script that uses the secrets
          cat > test-script.sh << 'EOF'
          #!/bin/bash
          echo "Testing script with secrets:"
          echo "DB_URL is set: ${DB_URL:+yes}"
          echo "API_KEY is set: ${API_KEY:+yes}"
          echo "DEBUG is set: ${DEBUG:+yes}"

          # Verify we have the expected values
          if [[ -z "$DB_URL" ]] || [[ -z "$API_KEY" ]] || \
            [[ -z "$DEBUG" ]]; then
            echo "ERROR: Missing expected environment variables"
            exit 1
          fi

          echo "SUCCESS: All environment variables are properly set"
          EOF

          chmod +x test-script.sh

      - name: Install Feller
        uses: ./.github/actions/setup-feller

      - name: Export secrets to JSON
        run: |
          teller export json > secrets.json
          cat secrets.json

      - name: Export secrets to ENV format
        run: |
          teller export env > secrets.env
          cat secrets.env

      - name: Run script with secrets
        run: teller run -- ./test-script.sh

      - name: Test shell export
        run: |
          eval "$(teller sh)"
          ./test-script.sh
